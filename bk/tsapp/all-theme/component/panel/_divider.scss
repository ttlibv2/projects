@use "../../setting/config"as cfg;
@use "../../setting/mixins"as util;

$prefix-cls   : "p-divider";
$prefix-ts-cls: "ts-divider";

.#{$prefix-cls} {

    &-content {
        background-color: cfg.$panelContentBg;
        z-index         : 1;
    }

    &-horizontal {
        margin : cfg.$dividerHorizontalMargin;
        padding: cfg.$dividerHorizontalPadding;

        &:before {
            border-top      : cfg.$dividerSize cfg.$dividerColor;
            border-top-style: cfg.$dividerStyle;
        }

        .#{$prefix-cls}-content {
            padding: 0 cfg.$inlineSpacing;
        }
    }

    &-vertical {
        margin : cfg.$dividerVerticalMargin;
        padding: cfg.$dividerVerticalPadding;

        &:before {
            border-left      : cfg.$dividerSize cfg.$dividerColor;
            border-left-style: cfg.$dividerStyle;
        }

        .#{$prefix-cls}-content {
            padding: cfg.$inlineSpacing 0;
        }
    }
}

.#{$prefix-ts-cls} {
    $bw       : var(--divider-size, cfg.$dividerSize);
    $bc       : var(--divider-color, cfg.$dividerColor);
    $bs       : var(--divider-style, cfg.$dividerStyle);
    $percent  : var(--divider-percent, cfg.$divider-orientation-margin);
    $textColor: var(--divider-text-color, inherit);


    &-danger {
        --divider-color     : #{cfg.$dangerButtonBg};
        --divider-text-color: #{cfg.$dangerButtonBg};
    }

    &-warning {
        --divider-color     : #{cfg.$warningButtonBg};
        --divider-text-color: #{cfg.$warningButtonBg};
    }

    &-help {
        --divider-color     : #{cfg.$helpButtonBg};
        --divider-text-color: #{cfg.$helpButtonBg};
    }

    &-info {
        --divider-color     : #{cfg.$infoButtonBg};
        --divider-text-color: #{cfg.$infoButtonBg};
    }

    &-success {
        --divider-color     : #{cfg.$successButtonBg};
        --divider-text-color: #{cfg.$successButtonBg};
    }

    &-primary {
        --divider-color     : #{cfg.$primaryButtonBg};
        --divider-text-color: #{cfg.$primaryButtonBg};
    }

    border-color: $bc;

    &-content {
        display: inline-block;
        padding: 0 cfg.$divider-text-padding;
        font-weight: 600;
        color  : $textColor;
    }

    &-vertical {
        position      : relative;
        top           : -0.06em;
        display       : inline-block;
        height        : cfg.$divider-vertical-height;
        vertical-align: middle;
        border-top    : 0;
        border-left   : $bw $bs $bc;
    }

    &-horizontal {
        display      : flex;
        clear        : both;
        width        : 100%;
        border-bottom: 0;

        &::before,
        &::after {
            position        : relative;
            width           : 50%;
            border-top      : $bw solid;
            border-top-color: inherit;
            border-bottom   : 0;
            content         : "";
        }


    }

    &-with-text {
        display    : flex;
        flex-flow  : row nowrap;
        align-items: center;
        font-weight: 500;
        white-space: nowrap;
        text-align : center;

        &-left {

            &:is(.pc-0)>.#{$prefix-ts-cls}-content {
                padding-left: 0;
            }


            &::before {
                width: $percent;
            }

            &::after {
                width: calc(100% - $percent);
            }
        }

        &-right {

            &:has(.pc-0)>.#{$prefix-ts-cls}-content {
                padding-right: 0;
            }

            &::before {
                width: calc(100% - $percent);
            }

            &::after {
                width: $percent;
            }
        }
    }
}