@use "../../setting/config" as cfg;
@use "../../setting/mixins" as util;

p-password.ng-invalid.ng-dirty > .p-password > .p-inputtext {
    @include util.invalid-input();
}

.p-password-panel {
   // padding: cfg.$panelContentPadding;
    background: cfg.$panelContentBg;
    color: cfg.$panelContentTextColor;
    border: cfg.$overlayContentBorder;
    box-shadow: cfg.$inputOverlayShadow;
    border-radius: cfg.$borderRadius;

    .p-password-meter {
        margin-bottom: cfg.$inlineSpacing;
        background: cfg.$passwordMeterBg;

        .p-password-strength {
            &.weak {
                background: cfg.$passwordWeakBg;
            }

            &.medium {
                background: cfg.$passwordMediumBg;
            }

            &.strong {
                background: cfg.$passwordStrongBg;
            }
        }
    }
}

p-password.p-password-clearable {
    .p-password-input {
        padding-right: nth(cfg.$inputPadding, 2) * 2 + cfg.$primeIconFontSize;
    }
    .p-password-clear-icon {
        color: cfg.$inputIconColor;
        right: nth(cfg.$inputPadding, 2);
    }
}

p-password.p-password-clearable.p-password-mask{
    .p-password-input {
        padding-right: nth(cfg.$inputPadding, 2) * 3 + cfg.$primeIconFontSize * 2;
    }

    .p-password-clear-icon {
        color: cfg.$inputIconColor;
        right: nth(cfg.$inputPadding, 2) * 2 + cfg.$primeIconFontSize;
    }
}

.p-password-mask {
    display: contents;
}