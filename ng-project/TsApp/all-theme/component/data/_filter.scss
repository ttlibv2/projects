@use "../../setting/config" as cfg;
@use "../../setting/mixins" as util;        

.p-column-filter-row {
    .p-column-filter-menu-button,
    .p-column-filter-clear-button {
        margin-left: cfg.$inlineSpacing;
    }
}

.p-column-filter-menu-button {
    width: cfg.$actionIconWidth;
    height: cfg.$actionIconHeight;
    color: cfg.$actionIconColor;
    border: cfg.$actionIconBorder;
    background: cfg.$actionIconBg;
    border-radius: cfg.$actionIconBorderRadius;
    transition: cfg.$actionIconTransition;

    &:hover {
        color: cfg.$actionIconHoverColor;
        border-color: cfg.$actionIconHoverBorderColor;
        background: cfg.$actionIconHoverBg;
    }

    &.p-column-filter-menu-button-open,
    &.p-column-filter-menu-button-open:hover {
        background: cfg.$actionIconHoverBg;
        color: cfg.$actionIconHoverColor;
    }

    &.p-column-filter-menu-button-active,
    &.p-column-filter-menu-button-active:hover {
        background: cfg.$highlightBg;
        color: cfg.$highlightTextColor;
    }

    &:focus-visible {
        @include util.focused();
    }

}

.p-column-filter-clear-button {
    width: cfg.$actionIconWidth;
    height: cfg.$actionIconHeight;
    color: cfg.$actionIconColor;
    border: cfg.$actionIconBorder;
    background: cfg.$actionIconBg;
    border-radius: cfg.$actionIconBorderRadius;
    transition: cfg.$actionIconTransition;

    &:hover {
        color: cfg.$actionIconHoverColor;
        border-color: cfg.$actionIconHoverBorderColor;
        background: cfg.$actionIconHoverBg;
    }

    &:focus-visible {
        @include util.focused();
    }
}

.p-column-filter-overlay {
    background: cfg.$inputOverlayBg;
    color: cfg.$inputListTextColor;
    border: cfg.$inputOverlayBorder;
    border-radius: cfg.$borderRadius;
    box-shadow: cfg.$inputOverlayShadow;
    min-width: cfg.$menuWidth;

    .p-column-filter-row-items {
        padding: cfg.$inputListPadding;

        .p-column-filter-row-item {
            margin: cfg.$inputListItemMargin;
            padding: cfg.$inputListItemPadding;
            border: cfg.$inputListItemBorder;
            color: cfg.$inputListItemTextColor;
            background: cfg.$inputListItemBg;
            transition: cfg.$listItemTransition;
            border-radius: cfg.$inputListItemBorderRadius;

            &:first-child {
                margin-top: 0;
            }

            &.p-highlight {
                color: cfg.$highlightTextColor;
                background: cfg.$highlightBg;
            }

            &:not(.p-highlight):not(.p-disabled):hover {
                color: cfg.$inputListItemTextHoverColor;
                background: cfg.$inputListItemHoverBg;
            }

            &:focus-visible {
                @include util.focused-listitem();
            }
        }

        .p-column-filter-separator {
            border-top: cfg.$divider;
            margin: cfg.$menuSeparatorMargin;
        }
    }
}

.p-column-filter-overlay-menu {
    .p-column-filter-operator {
        padding: cfg.$inputListHeaderPadding;
        border-bottom: cfg.$inputListHeaderBorder;
        color: cfg.$inputListHeaderTextColor;
        background: cfg.$inputOverlayHeaderBg;
        margin: cfg.$inputListHeaderMargin;
        border-top-right-radius: cfg.$borderRadius;
        border-top-left-radius: cfg.$borderRadius;
    }

    .p-column-filter-constraint {
        padding: cfg.$panelContentPadding;
        border-bottom: cfg.$divider;

        .p-column-filter-matchmode-dropdown {
            margin-bottom: cfg.$inlineSpacing;
        }

        .p-column-filter-remove-button {
            margin-top: cfg.$inlineSpacing;
        }

        &:last-child {
            border-bottom: 0 none;
        }
    }

    .p-column-filter-add-rule {
        padding: cfg.$panelFooterPadding;
    }

    .p-column-filter-buttonbar {
        padding: cfg.$panelContentPadding;
    } 
}