@use "../../setting/config" as cfg;
@use "../../setting/mixins" as util;

.p-datatable {
    .p-paginator-top {
        border-width: cfg.$tableTopPaginatorBorderWidth;
        border-radius: 0;
    }

    .p-paginator-bottom {
        border-width: cfg.$tableBottomPaginatorBorderWidth;
        border-radius: 0;
    }

    .p-datatable-header {
        background: cfg.$tableHeaderBg;
        color: cfg.$tableHeaderTextColor;
        border: cfg.$tableHeaderBorder;
        //border-width: cfg.$tableHeaderBorderWidth;
        padding: cfg.$tableHeaderPadding;
        font-weight: cfg.$tableHeaderFontWeight;
    }

    .p-datatable-footer {
        background: cfg.$tableFooterBg;
        color: cfg.$tableFooterTextColor;
        border: cfg.$tableFooterBorder;
        //border-width: cfg.$tableFooterBorderWidth;
        padding: cfg.$tableFooterPadding;
        font-weight: cfg.$tableFooterFontWeight;
    }

    .p-datatable-thead > tr > th {
        text-align: cfg.$tableCellContentAlignment;
        padding: cfg.$tableHeaderCellPadding;
        border: cfg.$tableHeaderCellBorder;
        //border-width: cfg.$tableHeaderCellBorderWidth;
        font-weight: cfg.$tableHeaderCellFontWeight;
        color: cfg.$tableHeaderCellTextColor;
        background: cfg.$tableHeaderCellBg;
        transition: cfg.$listItemTransition;
    }

    .p-datatable-tfoot > tr > td {
        text-align: cfg.$tableCellContentAlignment;
        padding: cfg.$tableFooterCellPadding;
        border: cfg.$tableFooterCellBorder;
        //border-width: cfg.$tableFooterCellBorderWidth;
        font-weight: cfg.$tableFooterCellFontWeight;
        color: cfg.$tableFooterCellTextColor;
        background: cfg.$tableFooterCellBg;
    }

    .p-sortable-column {
        .p-sortable-column-icon {
            color: cfg.$tableHeaderCellIconColor;
            margin-left: cfg.$inlineSpacing;
        }

        .p-sortable-column-badge {
            border-radius: 50%;
            height: cfg.$tableSortableColumnBadgeSize;
            min-width: cfg.$tableSortableColumnBadgeSize;
            line-height: cfg.$tableSortableColumnBadgeSize;
            color: cfg.$highlightTextColor;
            background: cfg.$highlightBg;
            margin-left: cfg.$inlineSpacing;
        }

        &:not(.p-highlight):hover {
            background: cfg.$tableHeaderCellHoverBg;
            color: cfg.$tableHeaderCellTextHoverColor;

            .p-sortable-column-icon {
                color: cfg.$tableHeaderCellIconHoverColor;
            }
        }

        &.p-highlight {
            background: cfg.$tableHeaderCellHighlightBg;
            color: cfg.$tableHeaderCellHighlightTextColor;

            .p-sortable-column-icon {
                color: cfg.$tableHeaderCellHighlightTextColor;
            }

            &:hover {
                background: cfg.$tableHeaderCellHighlightHoverBg;
                color: cfg.$tableHeaderCellHighlightTextColor;

                .p-sortable-column-icon {
                    color: cfg.$tableHeaderCellHighlightTextColor;
                }
            }
        }

        &:focus-visible {
            box-shadow: cfg.$inputListItemFocusShadow;
            outline: 0 none;
        }
    }

    .p-datatable-tbody {
        > tr {
            background: cfg.$tableBodyRowBg;
            color: cfg.$tableBodyRowTextColor;
            transition: cfg.$listItemTransition;

            > td {
                text-align: cfg.$tableCellContentAlignment;
                border: cfg.$tableBodyCellBorder;
                //border-width: cfg.$tableBodyCellBorderWidth;
                padding: cfg.$tableBodyCellPadding;

                .p-row-toggler,
                .p-row-editor-init,
                .p-row-editor-save,
                .p-row-editor-cancel {
                    @include util.action-icon();
                }

                .p-row-editor-save {
                    margin-right: cfg.$inlineSpacing;
                }
            }

            &:focus-visible {
                outline: 0.15rem solid cfg.$focusOutlineColor;
                outline-offset: -0.15rem;
            }

            &.p-highlight {
                background: cfg.$highlightBg;
                color: cfg.$highlightTextColor;
            }

            &.p-datatable-dragpoint-top > td {
                box-shadow: inset 0 2px 0 0 cfg.$highlightBg;
            }

            &.p-datatable-dragpoint-bottom > td {
                box-shadow: inset 0 -2px 0 0 cfg.$highlightBg;
            }
        }
    }

    &.p-datatable-hoverable-rows {
        .p-datatable-tbody > tr:not(.p-highlight):hover {
            background: cfg.$tableBodyRowHoverBg;
            color: cfg.$tableBodyRowTextHoverColor;
        }
    }

    .p-column-resizer-helper {
        background: cfg.$tableResizerHelperBg;
    }

    .p-datatable-scrollable-header,
    .p-datatable-scrollable-footer {
        background: cfg.$panelHeaderBg;
    }

    &.p-datatable-scrollable > .p-datatable-wrapper > .p-datatable-table,
    &.p-datatable-scrollable > .p-datatable-wrapper > .p-scroller-viewport > .p-scroller > .p-datatable-table {
        > .p-datatable-thead,
        > .p-datatable-tfoot {
            background-color: cfg.$tableHeaderCellBg;
        }
    }

    .p-datatable-loading-icon {
        font-size: cfg.$loadingIconFontSize;
    }

    &.p-datatable-gridlines {
        .p-datatable-header {
            border-width: 1px 1px 0 1px;
        }

        .p-datatable-footer {
            border-width: 0 1px 1px 1px;
        }

        .p-paginator-top {
            border-width: 0 1px 0 1px;
        }

        .p-paginator-bottom {
            border-width: 0 1px 1px 1px;
        }

        .p-datatable-thead {
            > tr {
                > th {
                    border-width: 1px 0 1px 1px;

                    &:last-child {
                        border-width: 1px;
                    }
                }
            }
        }

        .p-datatable-tbody {
            > tr {
                > td {
                    border-width: 1px 0 0 1px;

                    &:last-child {
                        border-width: 1px 1px 0 1px;
                    }
                }

                &:last-child {
                    > td {
                        border-width: 1px 0 1px 1px;

                        &:last-child {
                            border-width: 1px;
                        }
                    }
                }
            }
        }

        .p-datatable-tfoot {
            > tr {
                > td {
                    border-width: 1px 0 1px 1px;

                    &:last-child {
                        border-width: 1px 1px 1px 1px;
                    }
                }
            }
        }

        .p-datatable-thead + .p-datatable-tfoot {
            > tr {
                > td {
                    border-width: 0 0 1px 1px;

                    &:last-child {
                        border-width: 0 1px 1px 1px;
                    }
                }
            }
        }

        &:has(.p-datatable-thead):has(.p-datatable-tbody) .p-datatable-tbody {
            > tr {
                > td {
                    border-width: 0 0 1px 1px;

                    &:last-child {
                        border-width: 0 1px 1px 1px;
                    }
                }
            }
        }

        &:has(.p-datatable-tbody):has(.p-datatable-tfoot) .p-datatable-tbody {
            > tr {
                &:last-child {
                    > td {
                        border-width: 0 0 0 1px;

                        &:last-child {
                            border-width: 0 1px 0 1px;
                        }
                    }
                }
            }
        }
    }

    &.p-datatable-striped {
        .p-datatable-tbody {
            > tr:nth-child(even) {
                background: cfg.$tableBodyRowEvenBg;

                &.p-highlight {
                    background: cfg.$highlightBg;
                    color: cfg.$highlightTextColor;

                    .p-row-toggler {
                        color: cfg.$highlightTextColor;

                        &:hover {
                            color: cfg.$highlightTextColor;
                        }
                    }
                }
            }
        }
    }

    &.p-datatable-sm {
        .p-datatable-header {
            @include util.scaledPadding(cfg.$tableHeaderPadding, cfg.$tableScaleSM);
        }

        .p-datatable-thead > tr > th {
            @include util.scaledPadding(cfg.$tableHeaderCellPadding, cfg.$tableScaleSM);
        }

        .p-datatable-tbody > tr > td {
            @include util.scaledPadding(cfg.$tableBodyCellPadding, cfg.$tableScaleSM);
        }

        .p-datatable-tfoot > tr > td {
            @include util.scaledPadding(cfg.$tableFooterPadding, cfg.$tableScaleSM);
        }

        .p-datatable-footer {
            @include util.scaledPadding(cfg.$tableFooterPadding, cfg.$tableScaleSM);
        }
    }

    &.p-datatable-lg {
        .p-datatable-header {
            @include util.scaledPadding(cfg.$tableHeaderPadding, cfg.$tableScaleLG);
        }

        .p-datatable-thead > tr > th {
            @include util.scaledPadding(cfg.$tableHeaderCellPadding, cfg.$tableScaleLG);
        }

        .p-datatable-tbody > tr > td {
            @include util.scaledPadding(cfg.$tableBodyCellPadding, cfg.$tableScaleLG);
        }

        .p-datatable-tfoot > tr > td {
            @include util.scaledPadding(cfg.$tableFooterPadding, cfg.$tableScaleLG);
        }

        .p-datatable-footer {
            @include util.scaledPadding(cfg.$tableFooterPadding, cfg.$tableScaleLG);
        }
    }
}
