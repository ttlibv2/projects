@use "../mixins/container" as c;
@use "../mixins/breakpoints" as bp;
@use "../mixins/utils" as utl;
@use '../setting/config' as cfg;

$container-max-widths: cfg.$container-max-widths;
$grid-breakpoints: cfg.$grid-breakpoints;


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

  // Single container class with breakpoint max-widths
  .container,
    // 100% wide container at all breakpoints
  .container-fluid {
    @include c.make-container();
  }

  // Responsive containers that are 100% wide until a breakpoint
  @each $breakpointName, $max-width in $container-max-widths {
    $infix: bp.breakpoint-infix($breakpointName, $grid-breakpoints);
    $nameCls: utl.join-name($infix, 'container');

    .#{$nameCls} {
      @extend .container-fluid;
    }

    @include bp.media-breakpoint-up($breakpointName, $grid-breakpoints) {

      %responsive-#{$nameCls} {
        max-width: $max-width;
      }

      // Extend each breakpoint which is smaller or equal to the current breakpoint
      $extend-breakpoint: true;

      @each $name, $width in $grid-breakpoints {

        @if ($extend-breakpoint) {

          .#{$nameCls} {
            @extend %responsive-#{$nameCls};
          }

          // Once the current breakpoint is reached, stop extending
          @if ($breakpointName == $name) {
            $extend-breakpoint: false;
          }

        }
      }
    }
  }